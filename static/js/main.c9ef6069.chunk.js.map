{"version":3,"sources":["ToDoApp/ToDoItem/ToDoItem.js","ToDoApp/SavePopup.js","common/utils.js","ToDoApp/UploadPopup.js","ToDoApp/ToDo.js","common/Toast.js","App.js","index.js"],"names":["ToDoItem","name","isChecked","changeChecked","removeItem","shakeItemIndex","index","className","type","checked","onChange","e","onClick","SavePopup","toDoList","useState","filename","setFilename","enableDate","toggleDateFlag","id","href","placeholder","target","value","Date","jsonData","a","document","createElement","URL","createObjectURL","Blob","JSON","stringify","setAttribute","body","appendChild","click","removeChild","export2txt","UploadPopup","updateImportedList","importedTasks","setImportedTasks","disableImport","length","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","files","dataTransfer","reader","FileReader","onload","base64string","result","split","parse","atob","tasks","isValid","map","task","Object","keys","validateImportedTasks","readAsDataURL","disabled","ToDo","props","newTask","setNewTask","setToDoListState","backupToDoList","setBackupToDoList","setShakeItemIndex","setToDoList","addTask","toDo","foundIndex","findIndex","element","setTimeout","push","saveItems","saveList","localStorage","setItem","obj","indexDel","splice","useEffect","localTODO","getItem","undoFlag","disbaleClearAll","item","key","onKeyDown","event","keyCode","launch_toast","Toast","undo","currentTask","App","setCurrentTask","reverseUndoFlag","x","getElementById","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.c9ef6069.chunk.js","sourcesContent":["import React from 'react';\nimport './ToDoItem.css'\nlet ToDoItem = ({ name, isChecked, changeChecked, removeItem, shakeItemIndex, index }) => {\n\n  return (\n    <div className=\"col-s-12 col-5 row-wrap\">\n      <div className={`row-item  ${(shakeItemIndex === index) ? 'shake-animation row-item-duplicate' : null}`}>\n        <label>\n          <input type=\"checkbox\" checked={isChecked} onChange={(e) => { changeChecked(e, name) }} /> {name}\n        </label>\n        <div className=\"close-button unselectable\" onClick={() => { removeItem(name) }}>\n          x\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoItem;","import React, { useState } from 'react';\nimport { export2txt } from '../common/utils';\nlet SavePopup = ({ toDoList }) => {\n\n    const [filename, setFilename] = useState('mytasks');\n    const [enableDate, toggleDateFlag] = useState(false);\n\n\n    let changeChecked = (e) => {\n        let isChecked = e.target.checked\n        toggleDateFlag(isChecked)\n    }\n\n    let saveToDoListFile = () => {\n        let name = filename;\n        if (enableDate) name += '-' + new Date()\n        export2txt(name, toDoList)\n    }\n    return (\n        <div id=\"savePopup\" className=\"overlay\">\n            <div className=\"popup\">\n                <a className=\"close\" href=\"#\">&times;</a>\n                <div className=\"popup-header\">\n                    Save File\n                </div>\n                <input className=\"filename\" placeholder=\"Filename\" onChange={e => setFilename(e.target.value)}></input>\n                <br />\n                <label className=\"date-toggle\">\n                    <input type=\"checkbox\" onChange={(e) => { changeChecked(e) }} /> <span className=\"append-date-text\">Append Date to filename</span>\n                </label>\n                <button className=\" base-button add-button col-3 col-s-12\"\n                    onClick={saveToDoListFile}\n                >\n                    SAVE FILE\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default SavePopup;\n","// export const launch_toast = (message) => {\n//     var x = document.getElementById(\"toast\")\n//     x.className = \"show\";\n//     document.getElementById(\"desc\").innerText = message\n//     setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 5000);\n// }\n\nexport const export2txt = (filename, jsonData ) => {\n  \n    const a = document.createElement(\"a\");\n    a.href = URL.createObjectURL(new Blob([JSON.stringify(jsonData, null, 2)], {\n      type: \"text/plain\"\n    }));\n    a.setAttribute(\"download\", `${filename}.txt`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }","import React, { useState } from 'react';\nlet UploadPopup = ({ updateImportedList }) => {\n\n    const [importedTasks, setImportedTasks] = useState([]);\n    // const [enableDate, toggleDateFlag] = useState(false);\n\n    let validateImportedTasks = (tasks) => {\n        let isValid = true\n        tasks.map((task) => {\n            if (Object.keys(task).length !== 2) {\n                isValid = false;\n                return\n            }\n            if (typeof (task.name) !== 'string' && typeof (task.name) !== 'number') {\n                isValid = false;\n                return\n            }\n            if (typeof (task.isChecked) !== 'boolean') {\n                isValid = false;\n                return\n            }\n        })\n        return isValid;\n\n    }\n\n\n    let importToDolist = () => {\n        updateImportedList(importedTasks)\n        setImportedTasks([])\n    }\n\n    const dragOver = (e) => {\n        e.preventDefault();\n    }\n\n    const dragEnter = (e) => {\n        e.preventDefault();\n    }\n\n    const dragLeave = (e) => {\n        e.preventDefault();\n    }\n\n    const fileDrop = (e) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n\n\n        var reader = new FileReader();\n        reader.onload = function () {\n            let dataURL = reader.result;\n            let base64string = dataURL.split(',')[1];\n            let jsonData = JSON.parse(atob(base64string))\n            if (validateImportedTasks(jsonData)) {\n                setImportedTasks(jsonData)\n            }\n        };\n        reader.readAsDataURL(files[0]);\n\n    }\n\n    const disableImport = importedTasks.length === 0;\n    return (\n        <div id=\"uploadPopup\" className=\"overlay\">\n            <div className=\"popup\">\n                <a className=\"close\" href=\"#\">&times;</a>\n                <div className=\"popup-header\">\n                    Upload\n                </div>\n                <br />\n                <div\n                    onDragOver={dragOver}\n                    onDragEnter={dragEnter}\n                    onDragLeave={dragLeave}\n                    onDrop={fileDrop}\n                    className=\"upload-space\"\n                >\n                    <div className=\"drag-drop-plus\">+</div>\n                </div>\n                {\n                    importedTasks.map((task, index) =>\n                        <div>{index + 1}.{task.name}</div>\n                    )\n                }\n                        <a className=\"button\" href=\"#\">\n\n                <button className={`base-button ${disableImport ? 'clear-button-disabled' : 'add-button'} col-3 col-s-12`}\n                    onClick={importToDolist}\n                    disabled={disableImport ? true : false}\n                >\n                    IMPORT\n                </button>\n                </a>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default UploadPopup;\n","import React, { useState, useEffect } from \"react\";\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\nimport './ToDo.css'\nimport SavePopup from \"./SavePopup\";\nimport UploadPopup from \"./UploadPopup\";\n\nconst LOCAL_TODO = \"TO_DO_LIST\"\nconst CLEAR_ALL_TASKS = \"All your tasks have been cleared.\"\nlet ToDo = (props) => {\n\n  const [newTask, setNewTask] = useState();\n  const [toDoList, setToDoListState] = useState([]);\n  const [backupToDoList, setBackupToDoList] = useState([]);\n  const [shakeItemIndex, setShakeItemIndex] = useState(-1);\n\n\n  let setToDoList = (toDoList) => {\n\n    setBackupToDoList(toDoList)\n    setToDoListState(toDoList)\n  }\n\n  let addTask = () => {\n\n    let toDo = [...toDoList];\n    var foundIndex = toDo.findIndex(element => element.name === newTask);\n    if (foundIndex > -1) {\n      setShakeItemIndex(foundIndex)\n      setTimeout(() => {\n        setShakeItemIndex(-1)\n      }, 1000);\n      return;\n    }\n    if (newTask) {\n      toDo.push({ name: newTask, isChecked: false });\n      setToDoList(toDo);\n\n    }\n  };\n\n  let clearTasks = () => {\n    props.launch_toast(CLEAR_ALL_TASKS)\n    setToDoListState([]);\n  }\n\n  let getSavedItems = () => {\n    let localTODO = localStorage.getItem(LOCAL_TODO)\n    if (localTODO) {\n      setToDoList(JSON.parse(localTODO))\n    }\n  }\n\n  let saveItems = (saveList = toDoList) => {\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(saveList))\n  }\n\n  let updateImportedList = (saveList) => {\n    setToDoList(saveList)\n    saveItems(saveList)\n  }\n\n  let undoClearAll = () => {\n    if (backupToDoList.length > 0) setToDoList(backupToDoList)\n  }\n\n\n  let search = (event) => {\n    if (event.keyCode === 13) {\n      addTask()\n    }\n  }\n\n  let changeChecked = (e, name) => {\n\n    let toDo = [...toDoList];\n    let isChecked = e.target.checked\n    toDo = toDo.map(obj =>\n      obj.name === name ? { ...obj, isChecked } : obj\n    );\n    setToDoList(toDo)\n\n  }\n\n  let removeItem = (name) => {\n\n    let toDo = [...toDoList];\n    let indexDel;\n    toDo.map((obj, index) => {\n      if (obj.name === name) {\n        indexDel = index\n        return\n      }\n    }\n    );\n    toDo.splice(indexDel, 1)\n    setToDoList(toDo)\n  }\n\n  useEffect(getSavedItems, [])\n  useEffect(saveItems, [toDoList])\n  useEffect(undoClearAll, [props.undoFlag])\n\n  const disbaleClearAll = toDoList.length === 0;\n  return (\n    <>\n      <SavePopup toDoList={toDoList} />\n      <UploadPopup toDoList={toDoList} updateImportedList={updateImportedList} />\n      <div className=\"header container\">\n        <a className=\"button\" href=\"#savePopup\">\n          <button className=\"saveFileView\">\n            SAVE\n          </button>\n        </a>\n        <a className=\"button\" href=\"#uploadPopup\">\n          <button className=\"saveFileView\">\n            UPLOAD\n          </button>\n        </a>\n      </div>\n      <div className=\"row space-items\">\n\n        {\n          toDoList.map((item, index) => (\n            <ToDoItem\n              name={item.name}\n              key={item.name}\n              isChecked={item.isChecked}\n              changeChecked={changeChecked}\n              removeItem={removeItem}\n              index={index}\n              shakeItemIndex={shakeItemIndex}\n            />\n          ))\n        }\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <input onChange={e => setNewTask(e.target.value)} onKeyDown={search} className=\"task-input\" />\n        </div>\n\n        <div className=\" row button-container\">\n          <button className={`base-button clear-button col-3 col-s-12 ${disbaleClearAll ? 'clear-button-disabled' : 'clear-button'}`}\n            onClick={clearTasks}\n            disabled={disbaleClearAll ? true : false}\n          >\n            CLEAR ALL\n          </button>\n          <button className=\" base-button add-button col-3 col-s-12\"\n            onClick={addTask}\n          >\n            ADD A TASK\n          </button>\n\n\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport './toast.css'\nlet Toast = (props) => {\n    return (\n        <div id=\"toast\">\n            <button id=\"img\" onClick={props.undo}>UNDO</button>\n            <div id=\"desc\">{props.currentTask}</div>\n        </div>\n    );\n}\n\nexport default Toast;","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport ToDo from './ToDoApp/ToDo'\nimport './common/grid.css'\nimport Toast from \"./common/Toast\";\n\nlet App = () => {\n  const [currentTask, setCurrentTask] = useState();\n  const [undoFlag, reverseUndoFlag] = useState(true);\n\n  let launch_toast = (task) => {\n\n    var x = document.getElementById(\"toast\")\n    setCurrentTask(task)\n    x.className = \"show\";\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 5000);\n  }\n\n  let undo = () => {\n    reverseUndoFlag(!undoFlag)\n  }\n\n  return (\n    <>\n      <Toast undo={undo} currentTask={currentTask} />\n      <ToDo launch_toast={launch_toast} undoFlag={undoFlag} />\n    </>\n  );\n}\n\nexport default App;\n\n// To deploy to github pages, use $npm run deploy\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}
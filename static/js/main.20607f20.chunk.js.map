{"version":3,"sources":["ToDoApp/ToDoItem/ToDoItem.js","ToDoApp/ToDo.js","App.js","index.js"],"names":["ToDoItem","name","isChecked","changeChecked","type","checked","onChange","e","ToDo","useState","newTask","setNewTask","toDoList","setToDoList","useEffect","localTODO","localStorage","getItem","JSON","parse","setItem","stringify","toDo","target","map","obj","item","key","value","onClick","find","element","alert","push","addTask","App","ReactDOM","render","document","getElementById"],"mappings":"yQAaeA,EAXA,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,cAE9B,OACE,6BACE,+BACE,2BAAOC,KAAK,WAAWC,QAASH,EAAWI,SAAU,SAACC,GAAOJ,EAAcI,EAAGN,MADhF,IAC2FA,K,8NCJnG,IAmEeO,EAlEJ,WAAO,IAAD,EAEeC,qBAFf,mBAERC,EAFQ,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGRG,EAHQ,KAGEC,EAHF,KAqBfC,qBAAW,WACR,IAAIC,EAAYC,aAAaC,QAvBf,cAwBZF,GACDF,EAAYK,KAAKC,MAAMJ,MAExB,IAEHD,qBAAW,WACTE,aAAaI,QA9BE,aA8BkBF,KAAKG,UAAUT,MAC/C,CAACA,IAGJ,IAAIT,EAAgB,SAACI,EAAGN,GAEtB,IAAIqB,EAAI,YAAOV,GACXV,EAAYK,EAAEgB,OAAOlB,QACzBiB,EAAOA,EAAKE,KAAI,SAAAC,GAAG,OACjBA,EAAIxB,OAASA,E,yWAAb,IAAyBwB,EAAzB,CAA8BvB,cAAcuB,KAE9CZ,EAAYS,IAGd,OACE,6BACGV,EAASY,KAAI,SAAAE,GAAI,OAChB,kBAAC,EAAD,CACEzB,KAAMyB,EAAKzB,KACX0B,IAAKD,EAAKzB,KACVC,UAAWwB,EAAKxB,UAChBC,cAAeA,OAInB,2BAAOG,SAAU,SAAAC,GAAC,OAAII,EAAWJ,EAAEgB,OAAOK,UAC1C,4BACEC,QAAS,YAnDD,SAAAjB,GACZ,IAAIU,EAAI,YAAOV,GACHU,EAAKQ,MACf,SAAAC,GAAO,OAAIA,EAAQ9B,OAASS,KAG5BsB,MAAM,8CAGLtB,IACDY,EAAKW,KAAK,CAAEhC,KAAMS,EAASR,WAAW,IACtCW,EAAYS,IAyCRY,CAAQtB,KAFZ,gBCjDSuB,EANL,WACR,OACE,kBAAC,EAAD,OCDJC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.20607f20.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nlet ToDoItem = ({name, isChecked, changeChecked}) => {\r\n\r\n    return (\r\n      <div>\r\n        <label>\r\n          <input type=\"checkbox\" checked={isChecked} onChange={(e) => {changeChecked(e, name)}}/> {name}\r\n        </label>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ToDoItem;","import React, { useState, useEffect } from \"react\";\r\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\r\n\r\nconst LOCAL_TODO = \"TO_DO_LIST\"\r\nlet ToDo = () => {\r\n\r\n  const [newTask, setNewTask] = useState();\r\n  const [toDoList, setToDoList] = useState([]);\r\n\r\n  let addTask = toDoList => {\r\n    let toDo = [...toDoList];\r\n    var found = toDo.find(\r\n      element => element.name === newTask\r\n    );\r\n    if (found) {\r\n      alert(\"The task is already available in your list\");\r\n      return;\r\n    }\r\n    if(newTask){\r\n      toDo.push({ name: newTask, isChecked: false });\r\n      setToDoList(toDo);\r\n  \r\n    }\r\n  };\r\n\r\n  useEffect( () => {\r\n     let localTODO = localStorage.getItem(LOCAL_TODO)\r\n    if(localTODO){\r\n      setToDoList(JSON.parse(localTODO))\r\n    } \r\n  }, [])\r\n\r\n  useEffect( () => {\r\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(toDoList) )\r\n  }, [toDoList])\r\n\r\n\r\n  let changeChecked = (e, name) => {\r\n    \r\n    let toDo = [...toDoList];\r\n    let isChecked = e.target.checked\r\n    toDo = toDo.map(obj =>\r\n      obj.name === name ? { ...obj, isChecked } : obj\r\n    );\r\n    setToDoList(toDo)\r\n  \r\n  }\r\n  return (\r\n    <div>\r\n      {toDoList.map(item => (\r\n        <ToDoItem\r\n          name={item.name}\r\n          key={item.name}\r\n          isChecked={item.isChecked}\r\n          changeChecked={changeChecked}\r\n        />\r\n      ))}\r\n\r\n      <input onChange={e => setNewTask(e.target.value)} />\r\n      <button\r\n        onClick={() => {\r\n          addTask(toDoList);\r\n        }}\r\n      >\r\n        Add a task\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ToDo from './ToDoApp/ToDo'\n\nlet App = () => {\n  return (\n    <ToDo />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}
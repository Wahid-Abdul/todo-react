{"version":3,"sources":["ToDoApp/ToDoItem/ToDoItem.js","ToDoApp/ToDo.js","App.js","index.js"],"names":["ToDoItem","name","isChecked","changeChecked","removeItem","className","type","checked","onChange","e","onClick","ToDo","useState","newTask","setNewTask","toDoList","setToDoList","addTask","toDo","find","element","alert","push","useEffect","localTODO","localStorage","getItem","JSON","parse","setItem","stringify","target","map","obj","indexDel","index","splice","item","key","value","onKeyDown","event","keyCode","App","ReactDOM","render","document","getElementById"],"mappings":"+TAkBeA,G,MAhBA,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAEhD,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,aACb,+BACE,2BAAOC,KAAK,WAAWC,QAASL,EAAWM,SAAU,SAACC,GAAQN,EAAcM,EAAGR,MADjF,IAC8FA,GAE9F,yBAAKI,UAAU,4BAA4BK,QAAS,WAAQN,EAAWH,KAAvE,S,oOCNR,IA6GeU,EA5GJ,WAAO,IAAD,EAEeC,qBAFf,mBAERC,EAFQ,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGRG,EAHQ,KAGEC,EAHF,KAKXC,EAAU,WACZ,IAAIC,EAAI,YAAOH,GACHG,EAAKC,MACf,SAAAC,GAAO,OAAIA,EAAQnB,OAASY,KAG5BQ,MAAM,8CAGJR,IACFK,EAAKI,KAAK,CAAErB,KAAMY,EAASX,WAAW,IACtCc,EAAYE,KAShBK,qBAAU,WACR,IAAIC,EAAYC,aAAaC,QA3Bd,cA4BXF,GACFR,EAAYW,KAAKC,MAAMJ,MAExB,IAEHD,qBAAU,WACRE,aAAaI,QAlCE,aAkCkBF,KAAKG,UAAUf,MAC/C,CAACA,IAEJ,IAOIZ,EAAgB,SAACM,EAAGR,GAEtB,IAAIiB,EAAI,YAAOH,GACXb,EAAYO,EAAEsB,OAAOxB,QACzBW,EAAOA,EAAKc,KAAI,SAAAC,GAAG,OACjBA,EAAIhC,OAASA,E,yWAAb,IAAyBgC,EAAzB,CAA8B/B,cAAc+B,KAE9CjB,EAAYE,IAIVd,EAAa,SAACH,GAEhB,IACIiC,EADAhB,EAAI,YAAOH,GAEfG,EAAKc,KAAI,SAACC,EAAKE,GACTF,EAAIhC,OAASA,IACfiC,EAAWC,MAKfjB,EAAKkB,OAAOF,EAAU,GACtBlB,EAAYE,IAGd,OACE,oCACE,yBAAKb,UAAU,mBAEZU,EAASiB,KAAI,SAAAK,GAAI,OAChB,kBAAC,EAAD,CACEpC,KAAMoC,EAAKpC,KACXqC,IAAKD,EAAKpC,KACVC,UAAWmC,EAAKnC,UAChBC,cAAeA,EACfC,WAAYA,QAIlB,yBAAKC,UAAU,aACb,yBAAKA,UAAU,mBACb,2BAAOG,SAAU,SAAAC,GAAC,OAAIK,EAAWL,EAAEsB,OAAOQ,QAAQC,UAjD7C,SAACC,GACU,KAAlBA,EAAMC,SACRzB,KA+CyEZ,UAAU,gBAGjF,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,0CAChBK,QArEO,WACfM,EAAY,MAmEN,aAKA,4BAAQX,UAAU,yCAChBK,QAASO,GADX,kBCxFK0B,G,MANL,WACR,OACE,kBAAC,EAAD,QCFJC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.b1e20a9a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ToDoItem.css'\r\nlet ToDoItem = ({ name, isChecked, changeChecked, removeItem }) => {\r\n\r\n  return (\r\n    <div className=\"col-s-12 col-5 row-wrap\">\r\n      <div className=\" row-item\">\r\n        <label>\r\n          <input type=\"checkbox\" checked={isChecked} onChange={(e) => { changeChecked(e, name) }} /> {name}\r\n        </label>\r\n        <div className=\"close-button unselectable\" onClick={() => { removeItem(name) }}>\r\n          x\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;","import React, { useState, useEffect } from \"react\";\r\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\r\nimport './ToDo.css'\r\n\r\nconst LOCAL_TODO = \"TO_DO_LIST\"\r\nlet ToDo = () => {\r\n\r\n  const [newTask, setNewTask] = useState();\r\n  const [toDoList, setToDoList] = useState([]);\r\n\r\n  let addTask = () => {\r\n    let toDo = [...toDoList];\r\n    var found = toDo.find(\r\n      element => element.name === newTask\r\n    );\r\n    if (found) {\r\n      alert(\"The task is already available in your list\");\r\n      return;\r\n    }\r\n    if (newTask) {\r\n      toDo.push({ name: newTask, isChecked: false });\r\n      setToDoList(toDo);\r\n\r\n    }\r\n  };\r\n\r\n  let clearTasks = () => {\r\n    setToDoList([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let localTODO = localStorage.getItem(LOCAL_TODO)\r\n    if (localTODO) {\r\n      setToDoList(JSON.parse(localTODO))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(toDoList))\r\n  }, [toDoList])\r\n\r\n  let search = (event) => {\r\n    if (event.keyCode === 13) {\r\n      addTask()\r\n    }\r\n  }\r\n\r\n\r\n  let changeChecked = (e, name) => {\r\n\r\n    let toDo = [...toDoList];\r\n    let isChecked = e.target.checked\r\n    toDo = toDo.map(obj =>\r\n      obj.name === name ? { ...obj, isChecked } : obj\r\n    );\r\n    setToDoList(toDo)\r\n\r\n  }\r\n\r\n  let removeItem = (name) => {\r\n\r\n    let toDo = [...toDoList];\r\n    let indexDel;\r\n    toDo.map((obj, index) => {\r\n      if (obj.name === name) {\r\n        indexDel = index\r\n        return\r\n      }\r\n    }\r\n    );\r\n    toDo.splice(indexDel, 1)\r\n    setToDoList(toDo)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"row space-items\">\r\n\r\n        {toDoList.map(item => (\r\n          <ToDoItem\r\n            name={item.name}\r\n            key={item.name}\r\n            isChecked={item.isChecked}\r\n            changeChecked={changeChecked}\r\n            removeItem={removeItem}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"input-container\">\r\n          <input onChange={e => setNewTask(e.target.value)} onKeyDown={search} className=\"task-input\" />\r\n        </div>\r\n\r\n        <div className=\" row button-container\">\r\n          <button className=\"base-button clear-button col-3 col-s-12\"\r\n            onClick={clearTasks}\r\n          >\r\n            CLEAR ALL\r\n          </button>\r\n          <button className=\" base-button add-button col-3 col-s-12\"\r\n            onClick={addTask}\r\n          >\r\n            ADD A TASK\r\n          </button>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ToDo from './ToDoApp/ToDo'\r\nimport './common/grid.css'\r\n\r\nlet App = () => {\r\n  return (\r\n    <ToDo />\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n// To deploy to github pages, use $npm run deploy\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["ToDoApp/ToDoItem/ToDoItem.js","ToDoApp/ToDo.js","App.js","index.js"],"names":["ToDoItem","name","isChecked","changeChecked","removeItem","className","type","checked","onChange","e","onClick","ToDo","useState","newTask","setNewTask","toDoList","setToDoList","addTask","toDo","find","element","alert","push","useEffect","localTODO","localStorage","getItem","JSON","parse","setItem","stringify","target","map","obj","indexDel","index","splice","item","key","value","onKeyDown","event","keyCode","App","ReactDOM","render","document","getElementById"],"mappings":"+TAkBeA,G,MAhBA,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAEhD,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,aACb,+BACE,2BAAOC,KAAK,WAAWC,QAASL,EAAWM,SAAU,SAACC,GAAQN,EAAcM,EAAGR,MADjF,IAC8FA,GAE9F,yBAAKI,UAAU,4BAA4BK,QAAS,WAAQN,EAAWH,KAAvE,SCqFOU,G,MA1FJ,WAAO,IAAD,EAEeC,qBAFf,mBAERC,EAFQ,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGRG,EAHQ,KAGEC,EAHF,KAKXC,EAAU,WACZ,IAAIC,EAAI,YAAOH,GACHG,EAAKC,MACf,SAAAC,GAAO,OAAIA,EAAQnB,OAASY,KAG5BQ,MAAM,8CAGJR,IACFK,EAAKI,KAAK,CAAErB,KAAMY,EAASX,WAAW,IACtCc,EAAYE,KAKhBK,qBAAU,WACR,IAAIC,EAAYC,aAAaC,QAvBd,cAwBXF,GACFR,EAAYW,KAAKC,MAAMJ,MAExB,IAEHD,qBAAU,WACRE,aAAaI,QA9BE,aA8BkBF,KAAKG,UAAUf,MAC/C,CAACA,IAEJ,IAOIZ,EAAgB,SAACM,EAAGR,GAEtB,IAAIiB,EAAI,YAAOH,GACXb,EAAYO,EAAEsB,OAAOxB,QACzBW,EAAOA,EAAKc,KAAI,SAAAC,GAAG,OACjBA,EAAIhC,OAASA,EAAb,eAAyBgC,EAAzB,CAA8B/B,cAAc+B,KAE9CjB,EAAYE,IAIVd,EAAa,SAACH,GAChB,IACIiC,EADAhB,EAAI,YAAOH,GAEfG,EAAKc,KAAI,SAACC,EAAKE,GACTF,EAAIhC,OAASA,IACfiC,EAAWC,MAKfjB,EAAKkB,OAAOF,EAAU,GACtBlB,EAAYE,IAEd,OACE,6BACE,yBAAKb,UAAU,mBAEZU,EAASiB,KAAI,SAAAK,GAAI,OAChB,kBAAC,EAAD,CACEpC,KAAMoC,EAAKpC,KACXqC,IAAKD,EAAKpC,KACVC,UAAWmC,EAAKnC,UAChBC,cAAeA,EACfC,WAAYA,QAIlB,yBAAKC,UAAU,aACb,2BAAOG,SAAU,SAAAC,GAAC,OAAIK,EAAWL,EAAEsB,OAAOQ,QAAQC,UA9C3C,SAACC,GACU,KAAlBA,EAAMC,SACRzB,OA6CE,4BAAQZ,UAAU,GAChBK,QAASO,GADX,kBCzEO0B,G,MANL,WACR,OACE,kBAAC,EAAD,QCFJC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.1de834ad.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './ToDoItem.css'\nlet ToDoItem = ({ name, isChecked, changeChecked, removeItem }) => {\n\n  return (\n    <div className=\"col-s-12 col-5 row-wrap\">\n      <div className=\" row-item\">\n        <label>\n          <input type=\"checkbox\" checked={isChecked} onChange={(e) => { changeChecked(e, name) }} /> {name}\n        </label>\n        <div className=\"close-button unselectable\" onClick={() => { removeItem(name) }}>\n          x\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoItem;","import React, { useState, useEffect } from \"react\";\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\nimport './ToDo.css'\n\nconst LOCAL_TODO = \"TO_DO_LIST\"\nlet ToDo = () => {\n\n  const [newTask, setNewTask] = useState();\n  const [toDoList, setToDoList] = useState([]);\n\n  let addTask = () => {\n    let toDo = [...toDoList];\n    var found = toDo.find(\n      element => element.name === newTask\n    );\n    if (found) {\n      alert(\"The task is already available in your list\");\n      return;\n    }\n    if (newTask) {\n      toDo.push({ name: newTask, isChecked: false });\n      setToDoList(toDo);\n\n    }\n  };\n\n  useEffect(() => {\n    let localTODO = localStorage.getItem(LOCAL_TODO)\n    if (localTODO) {\n      setToDoList(JSON.parse(localTODO))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(toDoList))\n  }, [toDoList])\n\n  let search = (event) => {\n    if (event.keyCode === 13) {\n      addTask()\n    }\n  }\n\n\n  let changeChecked = (e, name) => {\n\n    let toDo = [...toDoList];\n    let isChecked = e.target.checked\n    toDo = toDo.map(obj =>\n      obj.name === name ? { ...obj, isChecked } : obj\n    );\n    setToDoList(toDo)\n\n  }\n\n  let removeItem = (name) => {\n    let toDo = [...toDoList];\n    let indexDel;\n    toDo.map((obj, index) => {\n      if (obj.name === name) {\n        indexDel = index\n        return\n      }\n    }\n    );\n    toDo.splice(indexDel, 1)\n    setToDoList(toDo)\n  }\n  return (\n    <div>\n      <div className=\"row space-items\">\n\n        {toDoList.map(item => (\n          <ToDoItem\n            name={item.name}\n            key={item.name}\n            isChecked={item.isChecked}\n            changeChecked={changeChecked}\n            removeItem={removeItem}\n          />\n        ))}\n      </div>\n      <div className=\"container\">\n        <input onChange={e => setNewTask(e.target.value)} onKeyDown={search} />\n        <button className=\"\"\n          onClick={addTask}\n        >\n          Add a task\n     </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport \"./App.css\";\nimport ToDo from './ToDoApp/ToDo'\nimport './common/grid.css'\n\nlet App = () => {\n  return (\n    <ToDo />\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["ToDoApp/ToDoItem/ToDoItem.js","ToDoApp/SavePopup.js","common/utils.js","ToDoApp/UploadPopup.js","ToDoApp/ToDo.js","common/Toast.js","App.js","index.js"],"names":["ToDoItem","name","isChecked","changeChecked","removeItem","shakeItemIndex","index","className","type","checked","onChange","e","onClick","SavePopup","toDoList","setShowSavePopup","useState","filename","setFilename","enableDate","toggleDateFlag","id","href","placeholder","target","value","Date","jsonData","a","document","createElement","URL","createObjectURL","Blob","JSON","stringify","setAttribute","body","appendChild","click","removeChild","export2txt","UploadPopup","updateImportedList","setShowUploadPopup","importedTasks","setImportedTasks","validateImportedTasks","tasks","isValid","map","task","Object","keys","length","onReaderLoad","event","console","log","result","parse","reader","FileReader","onload","readAsText","files","useEffect","getElementById","addEventListener","disableImport","style","opacity","display","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","base64string","split","atob","readAsDataURL","filter","i","disabled","ToDo","props","newTask","setNewTask","setToDoListState","backupToDoList","setBackupToDoList","setShakeItemIndex","showSavePopup","showUploadPopup","setToDoList","addTask","toDo","foundIndex","findIndex","element","setTimeout","push","saveItems","saveList","localStorage","setItem","obj","indexDel","splice","localTODO","getItem","undoFlag","disbaleClearAll","item","key","onKeyDown","keyCode","launch_toast","Toast","undo","currentTask","App","setCurrentTask","reverseUndoFlag","x","replace","ReactDOM","render"],"mappings":"mVAkBeA,G,MAhBA,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MAE5E,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAS,oBAAgBF,IAAmBC,EAAS,qCAAuC,OAC/F,+BACE,2BAAOE,KAAK,WAAWC,QAASP,EAAWQ,SAAU,SAACC,GAAQR,EAAcQ,EAAGV,MADjF,IAC8FA,GAE9F,yBAAKM,UAAU,4BAA4BK,QAAS,WAAQR,EAAWH,KAAvE,SCgCOY,G,MAxCC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAAuB,EAEhBC,mBAAS,WAFO,mBAEzCC,EAFyC,KAE/BC,EAF+B,OAGXF,oBAAS,GAHE,mBAGzCG,EAHyC,KAG7BC,EAH6B,KAgBhD,OACI,yBAAKC,GAAG,YAAYd,UAAU,WAC1B,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QAAQe,KAAK,IAAIV,QAAU,WAAOG,GAAiB,KAAlE,QACA,yBAAKR,UAAU,gBAAf,aAGA,2BAAOA,UAAU,WAAWgB,YAAY,WAAWb,SAAU,SAAAC,GAAC,OAAIO,EAAYP,EAAEa,OAAOC,UACvF,6BACA,2BAAOlB,UAAU,eACb,2BAAOC,KAAK,WAAWE,SAAU,SAACC,IApB9B,SAACA,GACjB,IAAIT,EAAYS,EAAEa,OAAOf,QACzBW,EAAelB,GAkBuCC,CAAcQ,MAD5D,IACqE,0BAAMJ,UAAU,oBAAhB,4BAErE,4BAAQA,UAAU,6DACdK,QAlBO,WACnB,IAAIX,EAAOgB,EACPE,IAAYlB,GAAQ,IAAM,IAAIyB,MCRhB,SAACT,EAAUU,GAEjC,IAAMC,EAAIC,SAASC,cAAc,KACjCF,EAAEN,KAAOS,IAAIC,gBAAgB,IAAIC,KAAK,CAACC,KAAKC,UAAUR,EAAU,KAAM,IAAK,CACzEnB,KAAM,gBAERoB,EAAEQ,aAAa,WAAf,UAA8BnB,EAA9B,SACAY,SAASQ,KAAKC,YAAYV,GAC1BA,EAAEW,QACFV,SAASQ,KAAKG,YAAYZ,GDAtBa,CAAWxC,EAAMa,KAcT,iBEmGD4B,EAhIG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,mBAAyB,EAEpB5B,mBAAS,IAFW,mBAEvD6B,EAFuD,KAExCC,EAFwC,KAM1DC,EAAwB,SAACC,GACzB,IAAIC,GAAU,EAed,OAdAD,EAAME,KAAI,SAACC,GAC0B,IAA7BC,OAAOC,KAAKF,GAAMG,SAIK,kBAAfH,EAAKlD,MAA6C,kBAAfkD,EAAKlD,OAIpB,mBAApBkD,EAAKjD,YAPb+C,GAAU,MAYXA,GAyCLM,EAAe,SAACC,GAClBC,QAAQC,IAAIF,EAAMhC,OAAOmC,QACzB,IAAIhC,EAAWO,KAAK0B,MAAMJ,EAAMhC,OAAOmC,QACnCZ,EAAsBpB,IACtBmB,EAAiBnB,IAKnBjB,EAAW,SAAC8C,GACd,IAAIK,EAAS,IAAIC,WACjBD,EAAOE,OAASR,EAChBM,EAAOG,WAAWR,EAAMhC,OAAOyC,MAAM,KAGzCC,qBAAU,WACNrC,SAASsC,eAAe,YAAYC,iBAAiB,SAAU1D,KAChE,IAGH,IAAM2D,EAAyC,IAAzBxB,EAAcS,OACpC,OACI,yBAAKjC,GAAG,cAAcd,UAAU,WAC5B,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QAAQK,QAAS,WAAOgC,GAAmB,KAA1D,QACA,yBAAKrC,UAAU,8BAAf,UAGA,6BACA,+BACI,2BAAOC,KAAK,OAAO8D,MAAO,CAAEC,QAAS,EAAGC,QAAS,QAAUnD,GAAG,aAC9D,yBACIoD,WA9DH,SAAC9D,GACdA,EAAE+D,kBA8DcC,YA3DF,SAAChE,GACfA,EAAE+D,kBA2DcE,YAxDF,SAACjE,GACfA,EAAE+D,kBAwDcG,OArDH,SAAClE,GACdA,EAAE+D,iBACF,IAAMT,EAAQtD,EAAEmE,aAAab,MAGzBJ,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACZ,IACIgB,EADUlB,EAAOF,OACMqB,MAAM,KAAK,GAClCrD,EAAWO,KAAK0B,MAAMqB,KAAKF,IAC3BhC,EAAsBpB,IACtBmB,EAAiBnB,IAGzBkC,EAAOqB,cAAcjB,EAAM,KAwCX1D,UAAU,gBAEV,yBAAKA,UAAU,kBAAf,OAIJsC,EAAcsC,QAAO,SAACC,EAAG9E,GAAJ,OAAeA,EAAQ,KAAI4C,KAAI,SAACC,EAAM7C,GAAP,OAChD,6BAAMA,EAAQ,EAAd,KAAmB6C,EAAKlD,SAI5B4C,EAAcS,OAAS,GAAK,MAEhC,uBAAG/C,UAAU,SAASe,KAAK,KAEvB,4BAAQf,UAAS,sBAAiB8D,EAAgB,wBAA0B,aAA3D,uCACbzD,QAxFC,WACjB+B,EAAmBE,GACnBC,EAAiB,IACjBF,GAAmB,IAsFHyC,WAAUhB,GAFd,c,8NC7GpB,IAkKeiB,EAhKJ,SAACC,GAAW,IAAD,EAEUvE,qBAFV,mBAEbwE,EAFa,KAEJC,EAFI,OAGiBzE,mBAAS,IAH1B,mBAGbF,EAHa,KAGH4E,EAHG,OAIwB1E,mBAAS,IAJjC,mBAIb2E,EAJa,KAIGC,EAJH,OAKwB5E,oBAAU,GALlC,mBAKbX,EALa,KAKGwF,EALH,OAMsB7E,oBAAS,GAN/B,mBAMb8E,EANa,KAME/E,EANF,OAO0BC,oBAAS,GAPnC,mBAOb+E,EAPa,KAOInD,EAPJ,KAUhBoD,EAAc,SAAClF,GAEjB8E,EAAkB9E,GAClB4E,EAAiB5E,IAGfmF,EAAU,WAEZ,IAAIC,EAAI,YAAOpF,GACXqF,EAAaD,EAAKE,WAAU,SAAAC,GAAO,OAAIA,EAAQpG,OAASuF,KAC5D,GAAIW,GAAc,EAKhB,OAJAN,EAAkBM,QAClBG,YAAW,WACTT,GAAmB,KAClB,KAGDL,IACFU,EAAKK,KAAK,CAAEtG,KAAMuF,EAAStF,WAAW,IACtC8F,EAAYE,KAiBZM,EAAY,WAA0B,IAAzBC,EAAwB,uDAAb3F,EAC1B4F,aAAaC,QAjDE,aAiDkBzE,KAAKC,UAAUsE,KAmB9CtG,EAAgB,SAACQ,EAAGV,GAEtB,IAAIiG,EAAI,YAAOpF,GACXZ,EAAYS,EAAEa,OAAOf,QACzByF,EAAOA,EAAKhD,KAAI,SAAA0D,GAAG,OACjBA,EAAI3G,OAASA,E,yWAAb,IAAyB2G,EAAzB,CAA8B1G,cAAc0G,KAE9CZ,EAAYE,IAIV9F,EAAa,SAACH,GAEhB,IACI4G,EADAX,EAAI,YAAOpF,GAEfoF,EAAKhD,KAAI,SAAC0D,EAAKtG,GACTsG,EAAI3G,OAASA,IACf4G,EAAWvG,MAKf4F,EAAKY,OAAOD,EAAU,GACtBb,EAAYE,IAGdhC,qBArDoB,WAClB,IAAI6C,EAAYL,aAAaM,QA1Cd,cA2CXD,GACFf,EAAY9D,KAAK0B,MAAMmD,MAkDF,IACzB7C,oBAAUsC,EAAW,CAAC1F,IACtBoD,qBAvCmB,WACbyB,EAAerC,OAAS,GAAG0C,EAAYL,KAsCrB,CAACJ,EAAM0B,WAE/B,IAAMC,EAAsC,IAApBpG,EAASwC,OACjC,OACE,oCACGwC,GAAiB,kBAAC,EAAD,CAAWhF,SAAUA,EAAUC,iBAAkBA,IAEjEgF,GACA,kBAAC,EAAD,CAAajF,SAAUA,EAAU6B,mBApDd,SAAC8D,GACxBT,EAAYS,GACZD,EAAUC,IAmDJ7D,mBAAoBA,IAGxB,yBAAKrC,UAAU,oBAEb,4BAAQA,UAAU,eAAeK,QAAS,WAAQG,GAAiB,KAAnE,QAKE,4BAAQR,UAAU,eAAeK,QAAS,WAAQgC,GAAmB,KAArE,WAKJ,yBAAKrC,UAAU,mBAGXO,EAASoC,KAAI,SAACiE,EAAM7G,GAAP,OACX,kBAAC,EAAD,CACEL,KAAMkH,EAAKlH,KACXmH,IAAKD,EAAKlH,KACVC,UAAWiH,EAAKjH,UAChBC,cAAeA,EACfC,WAAYA,EACZE,MAAOA,EACPD,eAAgBA,QAKxB,yBAAKE,UAAU,aACb,yBAAKA,UAAU,mBACb,2BAAOG,SAAU,SAAAC,GAAC,OAAI8E,EAAW9E,EAAEa,OAAOC,QAAQ4F,UA5E7C,SAAC7D,GACU,KAAlBA,EAAM8D,SACRrB,KA0EyE1F,UAAU,gBAGjF,yBAAKA,UAAU,yBACb,4BAAQA,UAAS,kDAA6C2G,EAAkB,wBAA0B,gBACxGtG,QA3GO,WACf2E,EAAMgC,aApCc,qCAqCpB7B,EAAiB,KA0GTL,WAAU6B,GAFZ,aAMA,4BAAQ3G,UAAU,yCAChBK,QAASqF,GADX,kBC/IKuB,G,YATH,SAACjC,GACT,OACI,yBAAKlE,GAAG,SACJ,4BAAQA,GAAG,MAAMT,QAAS2E,EAAMkC,MAAhC,QACA,yBAAKpG,GAAG,QAAQkE,EAAMmC,gBCwBnBC,EAxBL,WAAO,IAAD,EACwB3G,qBADxB,mBACP0G,EADO,KACME,EADN,OAEsB5G,oBAAS,GAF/B,mBAEPiG,EAFO,KAEGY,EAFH,KAgBd,OACE,oCACE,kBAAC,EAAD,CAAOJ,KANA,WACTI,GAAiBZ,IAKIS,YAAaA,IAChC,kBAAC,EAAD,CAAMH,aAfS,SAACpE,GAElB,IAAI2E,EAAIjG,SAASsC,eAAe,SAChCyD,EAAezE,GACf2E,EAAEvH,UAAY,OACd+F,YAAW,WAAcwB,EAAEvH,UAAYuH,EAAEvH,UAAUwH,QAAQ,OAAQ,MAAQ,MAUvCd,SAAUA,MCpBlDe,IAASC,OAAQ,kBAAE,EAAF,MAAYpG,SAASsC,eAAe,W","file":"static/js/main.a22d13cc.chunk.js","sourcesContent":["import React from 'react';\nimport './ToDoItem.css'\nlet ToDoItem = ({ name, isChecked, changeChecked, removeItem, shakeItemIndex, index }) => {\n\n  return (\n    <div className=\"col-s-12 col-5 row-wrap\">\n      <div className={`row-item  ${(shakeItemIndex === index) ? 'shake-animation row-item-duplicate' : null}`}>\n        <label>\n          <input type=\"checkbox\" checked={isChecked} onChange={(e) => { changeChecked(e, name) }} /> {name}\n        </label>\n        <div className=\"close-button unselectable\" onClick={() => { removeItem(name) }}>\n          x\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoItem;","import React, { useState } from 'react';\nimport { export2txt } from '../common/utils';\nlet SavePopup = ({ toDoList, setShowSavePopup }) => {\n\n    const [filename, setFilename] = useState('mytasks');\n    const [enableDate, toggleDateFlag] = useState(false);\n\n\n    let changeChecked = (e) => {\n        let isChecked = e.target.checked\n        toggleDateFlag(isChecked)\n    }\n\n    let saveToDoListFile = () => {\n        let name = filename;\n        if (enableDate) name += '-' + new Date()\n        export2txt(name, toDoList)\n    }\n    return (\n        <div id=\"savePopup\" className=\"overlay\">\n            <div className=\"popup\">\n                <div className=\"close\" href=\"#\" onClick={ () => {setShowSavePopup(false)}}>&times;</div>\n                <div className=\"popup-header\">\n                    Save File\n                </div>\n                <input className=\"filename\" placeholder=\"Filename\" onChange={e => setFilename(e.target.value)}></input>\n                <br />\n                <label className=\"date-toggle\">\n                    <input type=\"checkbox\" onChange={(e) => { changeChecked(e) }} /> <span className=\"append-date-text\">Append Date to filename</span>\n                </label>\n                <button className=\" base-button add-button col-12 col-s-12 margin-left-remove\"\n                    onClick={saveToDoListFile}\n                >\n                    SAVE FILE\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default SavePopup;\n","// export const launch_toast = (message) => {\n//     var x = document.getElementById(\"toast\")\n//     x.className = \"show\";\n//     document.getElementById(\"desc\").innerText = message\n//     setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 5000);\n// }\n\nexport const export2txt = (filename, jsonData ) => {\n  \n    const a = document.createElement(\"a\");\n    a.href = URL.createObjectURL(new Blob([JSON.stringify(jsonData, null, 2)], {\n      type: \"text/plain\"\n    }));\n    a.setAttribute(\"download\", `${filename}.txt`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }","import React, { useState, useEffect } from 'react';\nlet UploadPopup = ({ updateImportedList, setShowUploadPopup }) => {\n\n    const [importedTasks, setImportedTasks] = useState([]);\n    // const [enableDate, toggleDateFlag] = useState(false);\n\n\n    let validateImportedTasks = (tasks) => {\n        let isValid = true\n        tasks.map((task) => {\n            if (Object.keys(task).length !== 2) {\n                isValid = false;\n                return\n            }\n            if (typeof (task.name) !== 'string' && typeof (task.name) !== 'number') {\n                isValid = false;\n                return\n            }\n            if (typeof (task.isChecked) !== 'boolean') {\n                isValid = false;\n                return\n            }\n        })\n        return isValid;\n\n    }\n\n\n    let importToDolist = () => {\n        updateImportedList(importedTasks)\n        setImportedTasks([])\n        setShowUploadPopup(false)\n    }\n\n    const dragOver = (e) => {\n        e.preventDefault();\n    }\n\n    const dragEnter = (e) => {\n        e.preventDefault();\n    }\n\n    const dragLeave = (e) => {\n        e.preventDefault();\n    }\n\n    const fileDrop = (e) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n\n\n        var reader = new FileReader();\n        reader.onload = function () {\n            let dataURL = reader.result;\n            let base64string = dataURL.split(',')[1];\n            let jsonData = JSON.parse(atob(base64string))\n            if (validateImportedTasks(jsonData)) {\n                setImportedTasks(jsonData)\n            }\n        };\n        reader.readAsDataURL(files[0]);\n\n    }\n\n    const onReaderLoad = (event) => {\n        console.log(event.target.result);\n        let jsonData = JSON.parse(event.target.result);\n        if (validateImportedTasks(jsonData)) {\n            setImportedTasks(jsonData)\n        }\n        // closePopup();\n    }\n\n    const onChange = (event) => {\n        var reader = new FileReader();\n        reader.onload = onReaderLoad;\n        reader.readAsText(event.target.files[0]);\n    }\n\n    useEffect(() => {\n        document.getElementById('fileElem').addEventListener('change', onChange);\n    }, [])\n\n\n    const disableImport = importedTasks.length === 0;\n    return (\n        <div id=\"uploadPopup\" className=\"overlay\">\n            <div className=\"popup\">\n                <div className=\"close\" onClick={() => {setShowUploadPopup(false)}}>&times;</div>\n                <div className=\"popup-header remove-margin\">\n                    Upload\n                </div>\n                <br />\n                <label>\n                    <input type=\"file\" style={{ opacity: 0, display: \"none\" }} id=\"fileElem\" ></input>\n                    <div\n                        onDragOver={dragOver}\n                        onDragEnter={dragEnter}\n                        onDragLeave={dragLeave}\n                        onDrop={fileDrop}\n                        className=\"upload-space\"\n                    >\n                        <div className=\"drag-drop-plus\">+</div>\n                    </div>\n                </label>\n                {\n                    importedTasks.filter((i, index) => (index < 2)).map((task, index) =>\n                        <div>{index + 1}. {task.name}</div>\n                    )\n                }\n                {\n                    importedTasks.length > 5 && '...'\n                }\n                <a className=\"button\" href=\"#\">\n\n                    <button className={`base-button ${disableImport ? 'clear-button-disabled' : 'add-button'} col-12 col-s-12 margin-left-remove`}\n                        onClick={importToDolist}\n                        disabled={disableImport ? true : false}\n                    >\n                        IMPORT\n                </button>\n                </a>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default UploadPopup;\n","import React, { useState, useEffect } from \"react\";\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\nimport './ToDo.css'\nimport SavePopup from \"./SavePopup\";\nimport UploadPopup from \"./UploadPopup\";\n\nconst LOCAL_TODO = \"TO_DO_LIST\"\nconst CLEAR_ALL_TASKS = \"All your tasks have been cleared.\"\nlet ToDo = (props) => {\n\n  const [newTask, setNewTask] = useState();\n  const [toDoList, setToDoListState] = useState([]);\n  const [backupToDoList, setBackupToDoList] = useState([]);\n  const [shakeItemIndex, setShakeItemIndex] = useState(-1);\n  const [showSavePopup, setShowSavePopup] = useState(false);\n  const [showUploadPopup, setShowUploadPopup] = useState(false);\n\n\n  let setToDoList = (toDoList) => {\n\n    setBackupToDoList(toDoList)\n    setToDoListState(toDoList)\n  }\n\n  let addTask = () => {\n\n    let toDo = [...toDoList];\n    var foundIndex = toDo.findIndex(element => element.name === newTask);\n    if (foundIndex > -1) {\n      setShakeItemIndex(foundIndex)\n      setTimeout(() => {\n        setShakeItemIndex(-1)\n      }, 1000);\n      return;\n    }\n    if (newTask) {\n      toDo.push({ name: newTask, isChecked: false });\n      setToDoList(toDo);\n\n    }\n  };\n\n  let clearTasks = () => {\n    props.launch_toast(CLEAR_ALL_TASKS)\n    setToDoListState([]);\n  }\n\n  let getSavedItems = () => {\n    let localTODO = localStorage.getItem(LOCAL_TODO)\n    if (localTODO) {\n      setToDoList(JSON.parse(localTODO))\n    }\n  }\n\n  let saveItems = (saveList = toDoList) => {\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(saveList))\n  }\n\n  let updateImportedList = (saveList) => {\n    setToDoList(saveList)\n    saveItems(saveList)\n  }\n\n  let undoClearAll = () => {\n    if (backupToDoList.length > 0) setToDoList(backupToDoList)\n  }\n\n\n  let search = (event) => {\n    if (event.keyCode === 13) {\n      addTask()\n    }\n  }\n\n  let changeChecked = (e, name) => {\n\n    let toDo = [...toDoList];\n    let isChecked = e.target.checked\n    toDo = toDo.map(obj =>\n      obj.name === name ? { ...obj, isChecked } : obj\n    );\n    setToDoList(toDo)\n\n  }\n\n  let removeItem = (name) => {\n\n    let toDo = [...toDoList];\n    let indexDel;\n    toDo.map((obj, index) => {\n      if (obj.name === name) {\n        indexDel = index\n        return\n      }\n    }\n    );\n    toDo.splice(indexDel, 1)\n    setToDoList(toDo)\n  }\n\n  useEffect(getSavedItems, [])\n  useEffect(saveItems, [toDoList])\n  useEffect(undoClearAll, [props.undoFlag])\n\n  const disbaleClearAll = toDoList.length === 0;\n  return (\n    <>\n      {showSavePopup && <SavePopup toDoList={toDoList} setShowSavePopup={setShowSavePopup} />}\n      {\n        showUploadPopup &&\n        <UploadPopup toDoList={toDoList} updateImportedList={updateImportedList}\n          setShowUploadPopup={setShowUploadPopup}\n        />\n      }\n      <div className=\"header container\">\n        {/* <a className=\"button\" href=\"#savePopup\"> */}\n        <button className=\"saveFileView\" onClick={() => { setShowSavePopup(true) }}>\n          SAVE\n          </button>\n        {/* </a> */}\n        {/* <a className=\"button\" href=\"#uploadPopup\"> */}\n          <button className=\"saveFileView\" onClick={() => { setShowUploadPopup(true) }}>\n            UPLOAD\n          </button>\n        {/* </a> */}\n      </div>\n      <div className=\"row space-items\">\n\n        {\n          toDoList.map((item, index) => (\n            <ToDoItem\n              name={item.name}\n              key={item.name}\n              isChecked={item.isChecked}\n              changeChecked={changeChecked}\n              removeItem={removeItem}\n              index={index}\n              shakeItemIndex={shakeItemIndex}\n            />\n          ))\n        }\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <input onChange={e => setNewTask(e.target.value)} onKeyDown={search} className=\"task-input\" />\n        </div>\n\n        <div className=\" row button-container\">\n          <button className={`base-button clear-button col-3 col-s-12 ${disbaleClearAll ? 'clear-button-disabled' : 'clear-button'}`}\n            onClick={clearTasks}\n            disabled={disbaleClearAll ? true : false}\n          >\n            CLEAR ALL\n          </button>\n          <button className=\" base-button add-button col-3 col-s-12\"\n            onClick={addTask}\n          >\n            ADD A TASK\n          </button>\n\n\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport './toast.css'\nlet Toast = (props) => {\n    return (\n        <div id=\"toast\">\n            <button id=\"img\" onClick={props.undo}>UNDO</button>\n            <div id=\"desc\">{props.currentTask}</div>\n        </div>\n    );\n}\n\nexport default Toast;","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport ToDo from './ToDoApp/ToDo'\nimport './common/grid.css'\nimport Toast from \"./common/Toast\";\n\nlet App = () => {\n  const [currentTask, setCurrentTask] = useState();\n  const [undoFlag, reverseUndoFlag] = useState(true);\n\n  let launch_toast = (task) => {\n\n    var x = document.getElementById(\"toast\")\n    setCurrentTask(task)\n    x.className = \"show\";\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 5000);\n  }\n\n  let undo = () => {\n    reverseUndoFlag(!undoFlag)\n  }\n\n  return (\n    <>\n      <Toast undo={undo} currentTask={currentTask} />\n      <ToDo launch_toast={launch_toast} undoFlag={undoFlag} />\n    </>\n  );\n}\n\nexport default App;\n\n// To deploy to github pages, use $npm run deploy\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}
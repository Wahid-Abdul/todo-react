{"version":3,"sources":["ToDoApp/ToDoItem/ToDoItem.js","ToDoApp/ToDo.js","common/Toast.js","App.js","index.js"],"names":["ToDoItem","name","isChecked","changeChecked","removeItem","className","type","checked","onChange","e","onClick","ToDo","props","useState","newTask","setNewTask","toDoList","setToDoListState","backupToDoList","setBackupToDoList","console","log","setToDoList","addTask","toDo","find","element","alert","push","useEffect","localTODO","localStorage","getItem","JSON","parse","setItem","stringify","length","undoFlag","target","map","obj","indexDel","index","splice","disbaleClearAll","item","key","value","onKeyDown","event","keyCode","launch_toast","disabled","Toast","id","undo","currentTask","App","setCurrentTask","reverseUndoFlag","task","x","document","getElementById","setTimeout","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.f9bde71b.chunk.js","sourcesContent":["import React from 'react';\nimport './ToDoItem.css'\nlet ToDoItem = ({ name, isChecked, changeChecked, removeItem }) => {\n\n  return (\n    <div className=\"col-s-12 col-5 row-wrap\">\n      <div className=\" row-item\">\n        <label>\n          <input type=\"checkbox\" checked={isChecked} onChange={(e) => { changeChecked(e, name) }} /> {name}\n        </label>\n        <div className=\"close-button unselectable\" onClick={() => { removeItem(name) }}>\n          x\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoItem;","import React, { useState, useEffect } from \"react\";\nimport ToDoItem from \"./ToDoItem/ToDoItem\";\nimport './ToDo.css'\n\nconst LOCAL_TODO = \"TO_DO_LIST\"\nconst CLEAR_ALL_TASKS = \"All your tasks have been cleared.\"\nlet ToDo = (props) => {\n\n  const [newTask, setNewTask] = useState();\n  const [toDoList, setToDoListState] = useState([]);\n  const [backupToDoList, setBackupToDoList] = useState([]);\n\n  console.log('backupToDoList changed 1', toDoList)\n\n\n  let setToDoList = (toDoList) => {\n\n    console.log('backupToDoList changed ', toDoList)\n    setBackupToDoList(toDoList)\n    setToDoListState(toDoList)\n    console.log(backupToDoList)\n\n  }\n\n  let addTask = () => {\n    let toDo = [...toDoList];\n    var found = toDo.find(\n      element => element.name === newTask\n    );\n    if (found) {\n      alert(\"The task is already available in your list\");\n      return;\n    }\n    if (newTask) {\n      toDo.push({ name: newTask, isChecked: false });\n      setToDoList(toDo);\n\n    }\n  };\n\n  let clearTasks = () => {\n    props.launch_toast(CLEAR_ALL_TASKS)\n    setToDoListState([]);\n  }\n\n  useEffect(() => {\n    let localTODO = localStorage.getItem(LOCAL_TODO)\n    if (localTODO) {\n      setToDoList(JSON.parse(localTODO))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(toDoList))\n  }, [toDoList])\n\n  useEffect(() => {\n    if (backupToDoList.length > 0) setToDoList(backupToDoList)\n  }, [props.undoFlag])\n\n  let search = (event) => {\n    if (event.keyCode === 13) {\n      addTask()\n    }\n  }\n\n\n  let changeChecked = (e, name) => {\n\n    let toDo = [...toDoList];\n    let isChecked = e.target.checked\n    toDo = toDo.map(obj =>\n      obj.name === name ? { ...obj, isChecked } : obj\n    );\n    setToDoList(toDo)\n\n  }\n\n  let removeItem = (name) => {\n\n    let toDo = [...toDoList];\n    let indexDel;\n    toDo.map((obj, index) => {\n      if (obj.name === name) {\n        indexDel = index\n        return\n      }\n    }\n    );\n    toDo.splice(indexDel, 1)\n    setToDoList(toDo)\n  }\n\n  const disbaleClearAll = toDoList.length == 0;\n  return (\n    <>\n      <div className=\"row space-items\">\n\n        {toDoList.map(item => (\n          <ToDoItem\n            name={item.name}\n            key={item.name}\n            isChecked={item.isChecked}\n            changeChecked={changeChecked}\n            removeItem={removeItem}\n          />\n        ))}\n      </div>\n      <div className=\"container\">\n        <div className=\"input-container\">\n          <input onChange={e => setNewTask(e.target.value)} onKeyDown={search} className=\"task-input\" />\n        </div>\n\n        <div className=\" row button-container\">\n          <button className={`base-button clear-button col-3 col-s-12 ${disbaleClearAll ? 'clear-button-disabled' : 'clear-button'}`}\n            onClick={clearTasks}\n            disabled={disbaleClearAll ? true : false}\n          >\n            CLEAR ALL\n          </button>\n          <button className=\" base-button add-button col-3 col-s-12\"\n            onClick={addTask}\n          >\n            ADD A TASK\n          </button>\n\n\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport './toast.css'\nlet Toast = (props) => {\n    return (\n        <div id=\"toast\">\n            <button id=\"img\" onClick={props.undo}>UNDO</button>\n            <div id=\"desc\">{props.currentTask}</div>\n        </div>\n    );\n}\n\nexport default Toast;","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport ToDo from './ToDoApp/ToDo'\nimport './common/grid.css'\nimport Toast from \"./common/Toast\";\n\nlet App = () => {\n  const [currentTask, setCurrentTask] = useState();\n  const [undoFlag, reverseUndoFlag] = useState(true);\n\n  let launch_toast = (task) => {\n\n    var x = document.getElementById(\"toast\")\n    setCurrentTask(task)\n    x.className = \"show\";\n    setTimeout(function () { x.className = x.className.replace(\"show\", \"\"); }, 5000);\n  }\n\n  let undo = () => {\n    reverseUndoFlag(!undoFlag)\n  }\n\n  return (\n    <>\n      <Toast undo={undo} currentTask={currentTask} />\n      <ToDo launch_toast={launch_toast} undoFlag={undoFlag} />\n    </>\n  );\n}\n\nexport default App;\n\n// To deploy to github pages, use $npm run deploy\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}